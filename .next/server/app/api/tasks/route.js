"use strict";(()=>{var e={};e.id=495,e.ids=[495],e.modules={72934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},54580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},45869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},27790:e=>{e.exports=require("assert")},78893:e=>{e.exports=require("buffer")},84770:e=>{e.exports=require("crypto")},17702:e=>{e.exports=require("events")},32615:e=>{e.exports=require("http")},35240:e=>{e.exports=require("https")},86624:e=>{e.exports=require("querystring")},17360:e=>{e.exports=require("url")},21764:e=>{e.exports=require("util")},71568:e=>{e.exports=require("zlib")},23294:(e,t,s)=>{s.r(t),s.d(t,{originalPathname:()=>h,patchFetch:()=>v,requestAsyncStorage:()=>y,routeModule:()=>I,serverHooks:()=>R,staticGenerationAsyncStorage:()=>k});var r={};s.r(r),s.d(r,{GET:()=>x,POST:()=>m,PUT:()=>j});var a=s(49303),i=s(88716),o=s(60670),n=s(87070),u=s(75571),d=s(90455),c=s(83493),p=s(91585),l=s(26033);let g=p.Ry({title:p.Z_().min(1,"Title is required").max(200),description:p.Z_().optional(),priority:p.Km(["LOW","MEDIUM","HIGH","URGENT"]),deadline:p.Z_().datetime().optional(),projectId:p.Z_().min(1,"Project ID is required"),tagIds:p.IX(p.Z_()).optional(),estimatedHours:p.Rx().positive().optional()});async function x(e){try{let t=await (0,u.getServerSession)(d.L);if(!t?.user?.id)return n.NextResponse.json({success:!1,error:"Unauthorized"},{status:401});let{searchParams:s}=new URL(e.url),r=s.get("projectId"),a=s.get("status"),i=s.get("priority"),o=parseInt(s.get("page")||"1"),p=parseInt(s.get("limit")||"50"),l=s.get("search"),g={userId:t.user.id};r&&(g.projectId=r),a&&(g.status=a),i&&(g.priority=i),l&&(g.OR=[{title:{contains:l,mode:"insensitive"}},{description:{contains:l,mode:"insensitive"}}]);let[x,m]=await Promise.all([c._.task.findMany({where:g,include:{project:{select:{id:!0,name:!0,color:!0}},tags:{include:{tag:{select:{id:!0,name:!0,color:!0}}}}},orderBy:[{status:"asc"},{order:"asc"},{createdAt:"desc"}],skip:(o-1)*p,take:p}),c._.task.count({where:g})]);return n.NextResponse.json({success:!0,data:{tasks:x,pagination:{total:m,page:o,limit:p,totalPages:Math.ceil(m/p)}}})}catch(e){return console.error("GET /api/tasks error:",e),n.NextResponse.json({success:!1,error:"Internal server error"},{status:500})}}async function m(e){try{let t=await (0,u.getServerSession)(d.L);if(!t?.user?.id)return n.NextResponse.json({success:!1,error:"Unauthorized"},{status:401});let s=await e.json(),r=g.parse(s);if(!await c._.project.findFirst({where:{id:r.projectId,userId:t.user.id}}))return n.NextResponse.json({success:!1,error:"Project not found or unauthorized"},{status:404});let a=await c._.task.findFirst({where:{userId:t.user.id,status:"TODO"},orderBy:{order:"desc"}}),i=(a?.order||0)+1,o=await c._.task.create({data:{title:r.title,description:r.description,priority:r.priority,deadline:r.deadline?new Date(r.deadline):null,projectId:r.projectId,userId:t.user.id,order:i,status:"TODO"},include:{project:{select:{id:!0,name:!0,color:!0}},tags:{include:{tag:{select:{id:!0,name:!0,color:!0}}}}}});return r.tagIds&&r.tagIds.length>0&&await c._.taskTag.createMany({data:r.tagIds.map(e=>({taskId:o.id,tagId:e}))}),n.NextResponse.json({success:!0,data:o,message:"Task created successfully"},{status:201})}catch(e){if(e instanceof l.jm)return n.NextResponse.json({success:!1,error:"Validation error",message:e.errors[0].message},{status:400});return console.error("POST /api/tasks error:",e),n.NextResponse.json({success:!1,error:"Internal server error"},{status:500})}}async function j(e){try{let t=await (0,u.getServerSession)(d.L);if(!t?.user?.id)return n.NextResponse.json({success:!1,error:"Unauthorized"},{status:401});let s=await e.json();if(s.bulkUpdate&&Array.isArray(s.tasks)){let e=s.tasks.map(e=>c._.task.update({where:{id:e.id,userId:t.user.id},data:{status:e.status,order:e.order,..."DONE"===e.status&&{completedAt:new Date}}}));return await Promise.all(e),n.NextResponse.json({success:!0,message:"Tasks updated successfully"})}return n.NextResponse.json({success:!1,error:"Invalid bulk update format"},{status:400})}catch(e){return console.error("PUT /api/tasks error:",e),n.NextResponse.json({success:!1,error:"Internal server error"},{status:500})}}g.partial().extend({id:p.Z_().min(1),status:p.Km(["TODO","IN_PROGRESS","REVIEW","DONE"]).optional(),order:p.Rx().int().min(0).optional(),actualHours:p.Rx().positive().optional()});let I=new a.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/tasks/route",pathname:"/api/tasks",filename:"route",bundlePath:"app/api/tasks/route"},resolvedPagePath:"P:\\testing tm\\Task-Manager-V2\\app\\api\\tasks\\route.ts",nextConfigOutput:"",userland:r}),{requestAsyncStorage:y,staticGenerationAsyncStorage:k,serverHooks:R}=I,h="/api/tasks/route";function v(){return(0,o.patchFetch)({serverHooks:R,staticGenerationAsyncStorage:k})}},90455:(e,t,s)=>{s.d(t,{L:()=>o});var r=s(13539),a=s(77234),i=s(83493);let o={adapter:(0,r.N)(i._),providers:[(0,a.Z)({clientId:process.env.GOOGLE_CLIENT_ID,clientSecret:process.env.GOOGLE_CLIENT_SECRET})],callbacks:{redirect:async({url:e,baseUrl:t})=>e.startsWith("/")?`${t}${e}`:new URL(e).origin===t?e:`${t}/dashboard`,session:async({session:e,token:t})=>(e?.user&&t?.sub&&(e.user.id=t.sub),e),jwt:async({user:e,token:t})=>(e&&(t.uid=e.id),t)},session:{strategy:"jwt"},pages:{signIn:"/"}}},83493:(e,t,s)=>{s.d(t,{_:()=>a});let r=require("@prisma/client"),a=globalThis.prisma??new r.PrismaClient}};var t=require("../../../webpack-runtime.js");t.C(e);var s=e=>t(t.s=e),r=t.X(0,[276,646,70,585],()=>s(23294));module.exports=r})();